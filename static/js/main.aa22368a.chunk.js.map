{"version":3,"sources":["images/nature.png","images/father.svg","components/StyledText.js","components/Header/index.js","components/Face/index.js","components/Main/index.js","pages/Home.js","pages/Works.js","pages/Contacts.js","context/navState.js","hooks/useOnClickOutside.js","components/HamburgerButton.js","components/NavBar/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledText","color","styled","h3","StyledTextFunc","StyledContainer","Container","Ural","StyledRow","Row","Header","fluid","md","className","Col","SRow","Face","xs","Image","src","father","style","width","roundedCircle","Main","Home","Works","Contacts","MenuContext","createContext","isMenuOpen","toggleMenu","NavState","children","useState","Provider","value","toggleMenuMode","useOnClickOutside","ref","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","MenuButton","button","Bar","span","HamburgerButton","useContext","aria-label","aria-haspopup","onClick","StyledNav","nav","NavBar","node","useRef","Collapse","in","to","App","exact","path","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.aa22368a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nature.79ac43b7.png\";","module.exports = __webpack_public_path__ + \"static/media/father.04a2e817.svg\";","import styled from 'styled-components';\r\n\r\nconst StyledText = color => styled.h3`\r\n  display: block;\r\n  font-size: 30px;\r\n  font-family:BlinkMacSystemFont;\r\n  text-align: center;\r\n  & p {\r\n    display: inline-block;\r\n    color: ${color};\r\n    text-shadow: 3px 3px 4px grey ;\r\n  }\r\n  ::before {\r\n    content: \" \";\r\n    height: 2px;\r\n    width: 80px;\r\n    background-color: ${color};\r\n    display: inline-block;\r\n    margin: 10px 10px;\r\n    line-height: 50px;\r\n  };\r\n  ::after {\r\n    content: \" \";\r\n    height: 2px;\r\n    width: 80px;\r\n    background-color: ${color};\r\n    display: inline-block;\r\n    margin: 10px 10px;\r\n    line-height: 50px;\r\n  }\r\n`;\r\n\r\nexport { StyledText };","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport { StyledText } from '../StyledText';\r\nimport Ural from '../../images/nature.png';\r\n\r\nconst StyledTextFunc = StyledText(\"white\");\r\nconst StyledContainer = styled(Container)`\r\n  \r\n  background-image: url(${Ural});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n`;\r\nconst StyledRow = styled(Row)`\r\n  height: 100vh;\r\n`;\r\n\r\nfunction Header() {\r\n  return (\r\n    <>\r\n      <StyledContainer fluid md={12}>\r\n        <StyledRow className=\"align-items-center  \">\r\n          <Col >\r\n            <StyledTextFunc><p>Ильдар Насыров</p></StyledTextFunc>\r\n            <p className=\"text-center\">javascript разработчик</p>\r\n          </Col>\r\n        </StyledRow>\r\n      </StyledContainer>\r\n     \r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport { Header, StyledRow };","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Container,  Col, Image, Row } from 'react-bootstrap';\r\n\r\nimport { StyledText } from '../StyledText';\r\nimport father from '../../images/father.svg';\r\n\r\nconst StyledTextFunc = StyledText(\"black\");\r\n\r\nconst SRow = styled(Row)`\r\n  height: 100vh;\r\n`;\r\n\r\nfunction Face() {\r\n  return (\r\n    <Container>\r\n      <SRow className=\"justify-content-center\">\r\n        <Col xs={12} className=\"align-self-center\">\r\n          <StyledTextFunc>\r\n            <p>Ильдар Насыров</p>\r\n          </StyledTextFunc>\r\n        </Col>\r\n        <Col xs={6} className=\"align-self-center\" >\r\n          <Image src={father} style={{width: 200}}roundedCircle className=\"d-block mx-auto\"></Image>\r\n        </Col>\r\n      </SRow>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport { Face };\r\n","import React from 'react';\r\n\r\n// import styled from 'styled-components';\r\n\r\n// import { NavBar } from '../NavBar';\r\n// import { NavState } from '../../context/navState';\r\n// import { HamburgerButton } from '../HamburgerButton';\r\nimport { Header } from '../Header';\r\nimport { Face } from '../Face';\r\n\r\nfunction Main() {\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <Header />\r\n      </header>\r\n      <section>\r\n        <Face />\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { Main };","import React from 'react'\r\n\r\nimport { Main } from '../components/Main';\r\n\r\nexport function Home() {\r\n  return (\r\n    <div>\r\n      <Main />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport function Works() {\r\n  return (\r\n    <div>\r\n      <h2>Works page</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport function Contacts() {\r\n\r\n  return (\r\n    <div>\r\n      <h2> Contacts page</h2>\r\n    </div>\r\n  )\r\n}","import React, { createContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MenuContext = createContext({\r\n  isMenuOpen: false,\r\n  toggleMenu: () => {}\r\n})\r\n\r\nconst NavState = ({ children }) => {\r\n  const [ isMenuOpen, toggleMenu ] = useState(false);\r\n\r\n  function toggleMenuMode() {\r\n    toggleMenu(!isMenuOpen);\r\n  }\r\n\r\n  return (\r\n    <MenuContext.Provider value={{ isMenuOpen, toggleMenuMode }}>\r\n      { children }\r\n    </MenuContext.Provider>\r\n  )\r\n}\r\n\r\nNavState.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n}\r\n\r\nexport  { NavState, MenuContext };\r\n\r\n","import { useEffect } from 'react';\r\n\r\nconst useOnClickOutside = (ref, handler) => {\r\n  useEffect(() => {\r\n    const listener = event => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return;\r\n      }\r\n      handler(event);\r\n    };\r\n    document.addEventListener('mousedown', listener);\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener);\r\n    };\r\n  }, [ref, handler]);\r\n};\r\n\r\nexport { useOnClickOutside };","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { MenuContext } from '../context/navState';\r\n\r\nconst MenuButton = styled.button`\r\n  position: absolute;\r\n  \r\n  transform-origin: 16px 11px;\r\n  float: left;\r\n  margin-right: 29px;\r\n  outline: 0;\r\n  border: 0;\r\n  padding: 12px;\r\n  background: none;\r\n\r\n  span {\r\n    transition: all 0.3s ;\r\n  }\r\n  :focus {\r\n    border: medium none rgb(111, 255, 176);\r\n    box-shadow: (111, 255, 176) 0 0 2px 2px;\r\n    outline: 0; \r\n  }\r\n  :hover {\r\n    @media (pointer: fine) {\r\n      span:nth-of-type(1) {\r\n        width: 33px;\r\n      }\r\n      span:nth-of-type(2) {\r\n        width: 40px;\r\n      }\r\n      span:nth-of-type(3) {\r\n        width: 30px; \r\n      }\r\n    }\r\n  }\r\n  \r\n  \r\n  &.active {\r\n    span:nth-of-type(1) {\r\n      transform: rotate(45deg) translate(10px, 10px);\r\n      width: 40px; \r\n    }\r\n    span:nth-of-type(2) {\r\n      opacity: 0;\r\n      pointer-events: none; \r\n    }\r\n    span:nth-of-type(3) {\r\n      transform: rotate(-45deg) translate(7px, -7px);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Bar = styled.span`\r\n  display: block;\r\n  width: 40px;\r\n  height: 5px;\r\n  margin-bottom: 7px;\r\n  background-color: #ddd;\r\n`;\r\n\r\nconst HamburgerButton = () => {\r\n  const { isMenuOpen, toggleMenuMode } = useContext(MenuContext);\r\n\r\n  const clickHandler = () => {\r\n    toggleMenuMode();\r\n  }\r\n  return (\r\n    <MenuButton \r\n      className={ isMenuOpen ? 'active' : '' }\r\n      aria-label=\"Открыть главное меню\"\r\n      aria-haspopup={true}\r\n      onClick={ clickHandler }\r\n    >\r\n      <Bar />\r\n      <Bar />\r\n      <Bar />  \r\n    </MenuButton>\r\n  )\r\n}\r\n\r\nexport { HamburgerButton };\r\n\r\n\r\n\r\n\r\n","import React, { useContext, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Collapse } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nimport { MenuContext } from '../../context/navState';\r\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\r\nimport { HamburgerButton } from '../HamburgerButton';\r\n\r\nconst StyledNav = styled.nav`\r\n  margin-left: 40px;\r\n  button {\r\n    margin-left: -40px;\r\n  }\r\n  li {\r\n    list-style: none;\r\n    a {\r\n      text-decoration: none;\r\n      font-size: 18px;\r\n      line-height: 1em;\r\n      color: blue;\r\n      font-weight: 500;\r\n    :hover {\r\n      color: lightblue;\r\n    }\r\n    }\r\n  }\r\n`;\r\n\r\nexport function NavBar() {\r\n  const { isMenuOpen, toggleMenuMode } = useContext(MenuContext);\r\n  const node = useRef();\r\n  useOnClickOutside(node, () => {\r\n    if (isMenuOpen) toggleMenuMode()\r\n  });\r\n  return (   \r\n    <StyledNav ref={node}>\r\n      <HamburgerButton />\r\n      <Collapse in={isMenuOpen}>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/works\">Works</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/contacts\">Contacts</Link>\r\n          </li>\r\n        </ul>\r\n      </Collapse>\r\n    </StyledNav>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {\r\n  // Link,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\n\r\nimport { Home } from './pages/Home';\r\nimport { Works } from './pages/Works';\r\nimport { Contacts } from './pages/Contacts';\r\n\r\nimport { NavBar } from './components/NavBar';\r\nimport { NavState } from './context/navState';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n    <>\r\n      <NavState>\r\n        <NavBar />\r\n      </NavState>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/works\">\r\n          <Works />\r\n        </Route>\r\n        <Route path=\"/contacts\">\r\n          <Contacts />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n<Router>\r\n  <App />\r\n</Router>, \r\ndocument.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}